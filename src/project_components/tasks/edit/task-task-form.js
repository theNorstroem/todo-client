// Code generated by @furo/ui-builder. DO NOT EDIT.
import { LitElement, html, css } from 'lit-element';
import { Theme } from '@furo/framework/src/theme.js';
import { FBP } from '@furo/fbp';

// eslint-disable-next-line no-unused-vars
import { i18n } from '@furo/framework/src/i18n.js';

import '@furo/data-input';
import '@furo/form';
import '../task-task-reference-search.js';
import '../../person/person-person-reference-dropdown.js';
import '../../string-repeat.js';
import '../../person/person-dropdown-repeat.js';

/**
 * Tasks are essential at work.
 *
 * @summary todo: write summary
 * @customElement
 * @polymer
 * @appliesMixin FBP
 */
export class TaskTaskForm extends FBP(LitElement) {
  /**
   * @private
   * @return {Object}
   */
  static get properties() {
    return {
      // Header text to label the form
      headerText: {
        type: String,
        attribute: 'header-text',
      },
      // Secondary text for a detailed description
      secondaryText: {
        type: String,
        attribute: 'secondary-text',
      },
    };
  }

  // Fokus
  focus(d) {
    this._FBPTriggerWire('--focused', d);
  }

  /**
   * flow is ready lifecycle method
   */
  _FBPReady() {
    super._FBPReady();
    // this._FBPTraceWires()
  }

  /**
   *  Bind your furo-data-object event @-object-ready
   * @public
   * @param data
   */
  bindData(data) {
    this._FBPTriggerWire('--data', data);
    this.field = data;
  }

  /**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */
  static get styles() {
    // language=CSS
    return (
      Theme.getThemeForComponent('FormBaseTheme') ||
      css`
        :host {
          display: block;
        }

        :host(.in-repeater) {
          border-bottom: 1px solid var(--separator, #fafafa);
        }

        :host([hidden]) {
          display: none;
        }
      `
    );
  }

  /**
   * @private
   * @returns {TemplateResult}
   * @private
   */
  render() {
    // language=HTML
    return html`
      <!-- It is a good practice to set a description -->
      <furo-form
        header-text="${this.headerText ? this.headerText : ''}"
        secondary-text="${this.secondaryText ? this.secondaryText : ''}"
      >
        <!-- It is a good practice to set a description -->
        <furo-form-layouter four breakpoint-big="640" breakpoint-small="405">
          <!-- field: note -->
          <furo-data-text-input
            condensed
            double
            ƒ-bind-data="--data(*.display_name)"
            ƒ-focus="--focused"
          ></furo-data-text-input>
          <furo-data-textarea-input
            condensed
            full
            ƒ-bind-data="--data(*.note)"
            ƒ-focus="--focused"
          ></furo-data-textarea-input>

          <!-- field: parent -->
          <task-task-reference-search
            condensed
            full
            ƒ-bind-data="--data(*.parent)"
          ></task-task-reference-search>

          <!-- field: due_date -->
          <furo-data-date-input
            condensed
            double
            ƒ-bind-data="--data(*.due_date)"
          ></furo-data-date-input>

          <!-- field: responsible_person -->
          <person-person-reference-dropdown
            condensed
            double
            ƒ-bind-data="--data(*.responsible_person)"
          ></person-person-reference-dropdown>

          <!-- field: checklist -->
          <string-repeat
            condensed
            double
            header-text="Checklist"
            secondary-text="Items to prove to accomplish the task"
            label-add-button="Add checklist item"
            ƒ-bind-data="--data(*.checklist)"
          ></string-repeat>
          <person-dropdown-repeat
            header-text="Involved Persons"
            secondary-text="Sometimes a task is to hard for one person only."
            condensed
            double
            ƒ-bind-data="--data(*.involved_persons)"
          ></person-dropdown-repeat>
        </furo-form-layouter>
      </furo-form>
    `;
  }
}

window.customElements.define('task-task-form', TaskTaskForm);
